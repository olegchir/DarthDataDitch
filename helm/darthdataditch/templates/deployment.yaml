apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "darthdataditch.fullname" . }}
  labels:
    {{- include "darthdataditch.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  terminationGracePeriodSeconds: {{ .Values.terminationGracePeriod }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      {{- include "darthdataditch.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "darthdataditch.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: darthdataditch
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          env:
          - name: S3_BUCKET_NAME
            value: "{{ .Values.env.S3_BUCKET_NAME }}"
          - name: APP_VERSION
            value: "{{ .Chart.AppVersion }}"
          - name: USER_TOKENS
            value: "{{ .Values.env.USER_TOKENS }}"
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}